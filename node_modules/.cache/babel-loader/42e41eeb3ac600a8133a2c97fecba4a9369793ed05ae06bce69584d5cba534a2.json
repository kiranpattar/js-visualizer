{"ast":null,"code":"var _jsxFileName = \"/Users/sreedevir/Downloads/js-visualizer-starter/src/components/MemoryVisualizer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./MemoryVisualizer.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sleep = ms => new Promise(res => setTimeout(res, ms));\nexport default function MemorySimulator() {\n  _s();\n  const [callStack, setCallStack] = useState([]);\n  const [microtasks, setMicrotasks] = useState([]);\n  const [macrotasks, setMacrotasks] = useState([]);\n  const [heap, setHeap] = useState({});\n  const [logs, setLogs] = useState([]);\n  const log = msg => setLogs(prev => [...prev, msg]);\n  useEffect(() => {\n    const runSimulation = async () => {\n      log(\"Start simulation\\n\");\n\n      // Step 1: console.log(\"Start\")\n      setCallStack([\"console.log('Start')\"]);\n      log(\"‚ñ∂Ô∏è console.log('Start')\");\n      await sleep(1000);\n      setCallStack([]);\n\n      // Step 2: setTimeout\n      setCallStack([\"setTimeout(callback1)\"]);\n      const cb1 = \"callback1 (console.log('Timeout'))\";\n      setHeap(h => ({\n        ...h,\n        cb1\n      }));\n      await sleep(1000);\n      setMacrotasks([cb1]);\n      setCallStack([]);\n\n      // Step 3: Promise.resolve().then\n      setCallStack([\"Promise.then(callback2)\"]);\n      const cb2 = \"callback2 (console.log('Promise'))\";\n      setHeap(h => ({\n        ...h,\n        cb1,\n        cb2\n      }));\n      await sleep(1000);\n      setMicrotasks([cb2]);\n      setCallStack([]);\n\n      // Step 4: console.log(\"End\")\n      setCallStack([\"console.log('End')\"]);\n      log(\"‚ñ∂Ô∏è console.log('End')\");\n      await sleep(1000);\n      setCallStack([]);\n\n      // Microtask Execution\n      setCallStack([cb2]);\n      log(\"ü¶† Executing Microtask: Promise callback\");\n      await sleep(1000);\n      setCallStack([]);\n      setMicrotasks([]);\n      log(\"‚ñ∂Ô∏è console.log('Promise')\");\n\n      // Macrotask Execution\n      setCallStack([cb1]);\n      log(\"üïí Executing Macrotask: setTimeout callback\");\n      await sleep(1000);\n      setCallStack([]);\n      setMacrotasks([]);\n      log(\"‚ñ∂Ô∏è console.log('Timeout')\");\n      log(\"\\n‚úÖ Simulation complete\");\n    };\n    runSimulation();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"memory-layout\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"memory-block call-stack\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uD83D\\uDCDE Call Stack\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [...callStack].reverse().map((item, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: item\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"memory-block microtask\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uD83E\\uDDA0 Microtasks Queue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: microtasks.map((task, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: task\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"memory-block macrotask\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uD83D\\uDD52 Macrotasks Queue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: macrotasks.map((task, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: task\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heap-block\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uD83E\\uDDE0 Heap (Memory)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.entries(heap).map(([key, val], idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [key, \": \", val]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logs-block\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uD83D\\uDCDD Execution Log\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: logs.join(\"\\n\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(MemorySimulator, \"L5AzmkahzeeqtwpFnuyqd2H6CnI=\");\n_c = MemorySimulator;\nvar _c;\n$RefreshReg$(_c, \"MemorySimulator\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","sleep","ms","Promise","res","setTimeout","MemorySimulator","_s","callStack","setCallStack","microtasks","setMicrotasks","macrotasks","setMacrotasks","heap","setHeap","logs","setLogs","log","msg","prev","runSimulation","cb1","h","cb2","className","children","fileName","_jsxFileName","lineNumber","columnNumber","reverse","map","item","idx","task","Object","entries","key","val","join","_c","$RefreshReg$"],"sources":["/Users/sreedevir/Downloads/js-visualizer-starter/src/components/MemoryVisualizer.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./MemoryVisualizer.css\";\n\nconst sleep = (ms) => new Promise((res) => setTimeout(res, ms));\n\nexport default function MemorySimulator() {\n  const [callStack, setCallStack] = useState([]);\n  const [microtasks, setMicrotasks] = useState([]);\n  const [macrotasks, setMacrotasks] = useState([]);\n  const [heap, setHeap] = useState({});\n  const [logs, setLogs] = useState([]);\n\n  const log = (msg) => setLogs((prev) => [...prev, msg]);\n\n  useEffect(() => {\n    const runSimulation = async () => {\n      log(\"Start simulation\\n\");\n\n      // Step 1: console.log(\"Start\")\n      setCallStack([\"console.log('Start')\"]);\n      log(\"‚ñ∂Ô∏è console.log('Start')\");\n      await sleep(1000);\n      setCallStack([]);\n\n      // Step 2: setTimeout\n      setCallStack([\"setTimeout(callback1)\"]);\n      const cb1 = \"callback1 (console.log('Timeout'))\";\n      setHeap((h) => ({ ...h, cb1 }));\n      await sleep(1000);\n      setMacrotasks([cb1]);\n      setCallStack([]);\n\n      // Step 3: Promise.resolve().then\n      setCallStack([\"Promise.then(callback2)\"]);\n      const cb2 = \"callback2 (console.log('Promise'))\";\n      setHeap((h) => ({ ...h, cb1, cb2 }));\n      await sleep(1000);\n      setMicrotasks([cb2]);\n      setCallStack([]);\n\n      // Step 4: console.log(\"End\")\n      setCallStack([\"console.log('End')\"]);\n      log(\"‚ñ∂Ô∏è console.log('End')\");\n      await sleep(1000);\n      setCallStack([]);\n\n      // Microtask Execution\n      setCallStack([cb2]);\n      log(\"ü¶† Executing Microtask: Promise callback\");\n      await sleep(1000);\n      setCallStack([]);\n      setMicrotasks([]);\n      log(\"‚ñ∂Ô∏è console.log('Promise')\");\n\n      // Macrotask Execution\n      setCallStack([cb1]);\n      log(\"üïí Executing Macrotask: setTimeout callback\");\n      await sleep(1000);\n      setCallStack([]);\n      setMacrotasks([]);\n      log(\"‚ñ∂Ô∏è console.log('Timeout')\");\n\n      log(\"\\n‚úÖ Simulation complete\");\n    };\n\n    runSimulation();\n  }, []);\n\n  return (\n    <div className=\"memory-layout\">\n      <div className=\"top-section\">\n        <div className=\"memory-block call-stack\">\n          <h4>üìû Call Stack</h4>\n          <ul>\n            {[...callStack].reverse().map((item, idx) => (\n              <li key={idx}>{item}</li>\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"memory-block microtask\">\n          <h4>ü¶† Microtasks Queue</h4>\n          <ul>\n            {microtasks.map((task, idx) => (\n              <li key={idx}>{task}</li>\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"memory-block macrotask\">\n          <h4>üïí Macrotasks Queue</h4>\n          <ul>\n            {macrotasks.map((task, idx) => (\n              <li key={idx}>{task}</li>\n            ))}\n          </ul>\n        </div>\n      </div>\n\n      <div className=\"heap-block\">\n        <h4>üß† Heap (Memory)</h4>\n        <ul>\n          {Object.entries(heap).map(([key, val], idx) => (\n            <li key={idx}>\n              {key}: {val}\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"logs-block\">\n        <h4>üìù Execution Log</h4>\n        <pre>{logs.join(\"\\n\")}</pre>\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}