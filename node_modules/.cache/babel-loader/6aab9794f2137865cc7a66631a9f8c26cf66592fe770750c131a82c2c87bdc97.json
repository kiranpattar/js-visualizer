{"ast":null,"code":"var _jsxFileName = \"/Users/sreedevir/Downloads/js-visualizer-starter/src/components/MemoryVisualizer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./MemoryVisualizer.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MemoryVisualizer({\n  memoryEvents = [],\n  executionSpeed = 1000\n}) {\n  _s();\n  const [callStack, setCallStack] = useState([]);\n  const [microtasks, setMicrotasks] = useState([]);\n  const [macrotasks, setMacrotasks] = useState([]);\n  const [heap, setHeap] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  useEffect(() => {\n    if (currentIndex >= memoryEvents.length) return;\n    const timer = setTimeout(() => {\n      const event = memoryEvents[currentIndex];\n      if (!event || !event.type) return;\n      switch (event.type) {\n        case \"callStackEnter\":\n          setCallStack(prev => [...prev, event.value]);\n          break;\n        case \"callStackExit\":\n          setCallStack(prev => prev.slice(0, -1));\n          break;\n        case \"microtask\":\n          setMicrotasks(prev => [...prev, event.value]);\n          break;\n        case \"macrotask\":\n          setMacrotasks(prev => [...prev, event.value]);\n          break;\n        case \"heap\":\n          setHeap(prev => [...prev, event.value]);\n          break;\n        default:\n          break;\n      }\n      setCurrentIndex(prev => prev + 1);\n    }, executionSpeed);\n    return () => clearTimeout(timer);\n  }, [currentIndex, memoryEvents, executionSpeed]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"memory-layout\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"memory-block call-stack\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uD83D\\uDCDE Call Stack\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [...callStack].reverse().map((item, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"call-stack-item\",\n            children: item\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"memory-block microtask\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uD83E\\uDDA0 Microtasks Queue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: microtasks.map((item, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: item\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"memory-block macrotask\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uD83D\\uDD52 Macrotasks Queue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: macrotasks.map((item, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: item\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heap-block\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uD83E\\uDDE0 Heap (Memory)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: heap.map((item, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: item\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(MemoryVisualizer, \"Gc+Tx+fVIObqJ7VjMCzufyDke5c=\");\n_c = MemoryVisualizer;\nvar _c;\n$RefreshReg$(_c, \"MemoryVisualizer\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","MemoryVisualizer","memoryEvents","executionSpeed","_s","callStack","setCallStack","microtasks","setMicrotasks","macrotasks","setMacrotasks","heap","setHeap","currentIndex","setCurrentIndex","length","timer","setTimeout","event","type","prev","value","slice","clearTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","reverse","map","item","idx","_c","$RefreshReg$"],"sources":["/Users/sreedevir/Downloads/js-visualizer-starter/src/components/MemoryVisualizer.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./MemoryVisualizer.css\";\n\nexport default function MemoryVisualizer({ memoryEvents = [], executionSpeed = 1000 }) {\n  const [callStack, setCallStack] = useState([]);\n  const [microtasks, setMicrotasks] = useState([]);\n  const [macrotasks, setMacrotasks] = useState([]);\n  const [heap, setHeap] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  useEffect(() => {\n    if (currentIndex >= memoryEvents.length) return;\n\n    const timer = setTimeout(() => {\n      const event = memoryEvents[currentIndex];\n\n      if (!event || !event.type) return;\n\n      switch (event.type) {\n        case \"callStackEnter\":\n          setCallStack((prev) => [...prev, event.value]);\n          break;\n        case \"callStackExit\":\n          setCallStack((prev) => prev.slice(0, -1));\n          break;\n        case \"microtask\":\n          setMicrotasks((prev) => [...prev, event.value]);\n          break;\n        case \"macrotask\":\n          setMacrotasks((prev) => [...prev, event.value]);\n          break;\n        case \"heap\":\n          setHeap((prev) => [...prev, event.value]);\n          break;\n        default:\n          break;\n      }\n\n      setCurrentIndex((prev) => prev + 1);\n    }, executionSpeed);\n\n    return () => clearTimeout(timer);\n  }, [currentIndex, memoryEvents, executionSpeed]);\n\n  return (\n    <div className=\"memory-layout\">\n      <div className=\"top-section\">\n        {/* Call Stack */}\n        <div className=\"memory-block call-stack\">\n          <h4>ðŸ“ž Call Stack</h4>\n          <ul>\n            {[...callStack].reverse().map((item, idx) => (\n              <li key={idx} className=\"call-stack-item\">\n                {item}\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        {/* Microtasks */}\n        <div className=\"memory-block microtask\">\n          <h4>ðŸ¦  Microtasks Queue</h4>\n          <ul>\n            {microtasks.map((item, idx) => (\n              <li key={idx}>{item}</li>\n            ))}\n          </ul>\n        </div>\n\n        {/* Macrotasks */}\n        <div className=\"memory-block macrotask\">\n          <h4>ðŸ•’ Macrotasks Queue</h4>\n          <ul>\n            {macrotasks.map((item, idx) => (\n              <li key={idx}>{item}</li>\n            ))}\n          </ul>\n        </div>\n      </div>\n\n      {/* Heap */}\n      <div className=\"heap-block\">\n        <h4>ðŸ§  Heap (Memory)</h4>\n        <ul>\n          {heap.map((item, idx) => (\n            <li key={idx}>{item}</li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}