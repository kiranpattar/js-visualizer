{"ast":null,"code":"var _jsxFileName = \"/Users/sreedevir/Downloads/js-visualizer-starter/src/components/MemoryVisualizer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./MemoryVisualizer.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MemoryVisualizer({\n  memoryEvents = []\n}) {\n  _s();\n  const [callStack, setCallStack] = useState([]);\n  const [microtasks, setMicrotasks] = useState([]);\n  const [macrotasks, setMacrotasks] = useState([]);\n  const [heapItems, setHeapItems] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  useEffect(() => {\n    if (!memoryEvents || memoryEvents.length === 0) return;\n\n    // Reset state\n    setCallStack([]);\n    setMicrotasks([]);\n    setMacrotasks([]);\n    setHeapItems([]);\n    setCurrentIndex(0);\n    const interval = setInterval(() => {\n      const event = memoryEvents[currentIndex];\n      if (!event) {\n        clearInterval(interval);\n        return;\n      }\n      setCurrentIndex(prev => prev + 1);\n      switch (event.type) {\n        case \"callstack-push\":\n          setCallStack(prev => [...prev, event.value]);\n          break;\n        case \"callstack-pop\":\n          setCallStack(prev => prev.slice(0, -1));\n          break;\n        case \"microtask\":\n          setMicrotasks(prev => [...prev, event.value]);\n          break;\n        case \"macrotask\":\n          setMacrotasks(prev => [...prev, event.value]);\n          break;\n        case \"heap\":\n          setHeapItems(prev => [...prev, event.value]);\n          break;\n        default:\n          break;\n      }\n    }, 500);\n    return () => clearInterval(interval);\n  }, [memoryEvents]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"memory-layout\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"memory-block call-stack\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uD83D\\uDCDE Call Stack\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [...callStack].reverse().map((item, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"callstack-item\",\n            children: item\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"memory-block microtask\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uD83E\\uDDA0 Microtasks Queue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: microtasks.map((m, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: m\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"memory-block macrotask\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uD83D\\uDD52 Macrotasks Queue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: macrotasks.map((m, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: m\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heap-block\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uD83E\\uDDE0 Heap (Memory)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: heapItems.map((h, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: JSON.stringify(h)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(MemoryVisualizer, \"LisLc3xSTzXWtMiXkSxtADWYoVE=\");\n_c = MemoryVisualizer;\nvar _c;\n$RefreshReg$(_c, \"MemoryVisualizer\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","MemoryVisualizer","memoryEvents","_s","callStack","setCallStack","microtasks","setMicrotasks","macrotasks","setMacrotasks","heapItems","setHeapItems","currentIndex","setCurrentIndex","length","interval","setInterval","event","clearInterval","prev","type","value","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","reverse","map","item","idx","m","i","h","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/sreedevir/Downloads/js-visualizer-starter/src/components/MemoryVisualizer.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./MemoryVisualizer.css\";\n\nexport default function MemoryVisualizer({ memoryEvents = [] }) {\n  const [callStack, setCallStack] = useState([]);\n  const [microtasks, setMicrotasks] = useState([]);\n  const [macrotasks, setMacrotasks] = useState([]);\n  const [heapItems, setHeapItems] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  useEffect(() => {\n    if (!memoryEvents || memoryEvents.length === 0) return;\n\n    // Reset state\n    setCallStack([]);\n    setMicrotasks([]);\n    setMacrotasks([]);\n    setHeapItems([]);\n    setCurrentIndex(0);\n\n    const interval = setInterval(() => {\n      const event = memoryEvents[currentIndex];\n      if (!event) {\n        clearInterval(interval);\n        return;\n      }\n\n      setCurrentIndex((prev) => prev + 1);\n\n      switch (event.type) {\n        case \"callstack-push\":\n          setCallStack((prev) => [...prev, event.value]);\n          break;\n        case \"callstack-pop\":\n          setCallStack((prev) => prev.slice(0, -1));\n          break;\n        case \"microtask\":\n          setMicrotasks((prev) => [...prev, event.value]);\n          break;\n        case \"macrotask\":\n          setMacrotasks((prev) => [...prev, event.value]);\n          break;\n        case \"heap\":\n          setHeapItems((prev) => [...prev, event.value]);\n          break;\n        default:\n          break;\n      }\n    }, 500);\n\n    return () => clearInterval(interval);\n  }, [memoryEvents]);\n\n  return (\n    <div className=\"memory-layout\">\n      <div className=\"top-section\">\n        <div className=\"memory-block call-stack\">\n          <h4>ðŸ“ž Call Stack</h4>\n          <ul>\n            {[...callStack].reverse().map((item, idx) => (\n              <li key={idx} className=\"callstack-item\">\n                {item}\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"memory-block microtask\">\n          <h4>ðŸ¦  Microtasks Queue</h4>\n          <ul>\n            {microtasks.map((m, i) => (\n              <li key={i}>{m}</li>\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"memory-block macrotask\">\n          <h4>ðŸ•’ Macrotasks Queue</h4>\n          <ul>\n            {macrotasks.map((m, i) => (\n              <li key={i}>{m}</li>\n            ))}\n          </ul>\n        </div>\n      </div>\n\n      <div className=\"heap-block\">\n        <h4>ðŸ§  Heap (Memory)</h4>\n        <ul>\n          {heapItems.map((h, i) => (\n            <li key={i}>{JSON.stringify(h)}</li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}