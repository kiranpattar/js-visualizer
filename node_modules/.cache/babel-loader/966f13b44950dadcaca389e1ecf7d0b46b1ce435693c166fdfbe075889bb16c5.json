{"ast":null,"code":"var _jsxFileName = \"/Users/sreedevir/Downloads/js-visualizer-starter/src/components/MemoryVisualizer.jsx\";\nimport React from \"react\";\nimport \"./MemoryVisualizer.css\"; // Create this CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MemoryVisualizer = ({\n  callStack,\n  microtasks,\n  macrotasks,\n  heap\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"memory-visualizer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section call-stack\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uD83D\\uDCDE Call Stack\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: callStack.length === 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"empty\",\n          children: \"Empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 13\n        }, this) : callStack.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 44\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section queue\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uD83D\\uDCCB Microtasks Queue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: microtasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"empty\",\n            children: \"Empty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this) : microtasks.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 47\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uD83D\\uDD53 Macrotasks Queue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: macrotasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"empty\",\n            children: \"Empty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this) : macrotasks.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 47\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section heap\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uD83E\\uDDE0 Heap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: heap.length === 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"empty\",\n          children: \"Empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this) : heap.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 39\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = MemoryVisualizer;\nexport default MemoryVisualizer;\nvar _c;\n$RefreshReg$(_c, \"MemoryVisualizer\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","MemoryVisualizer","callStack","microtasks","macrotasks","heap","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","item","index","_c","$RefreshReg$"],"sources":["/Users/sreedevir/Downloads/js-visualizer-starter/src/components/MemoryVisualizer.jsx"],"sourcesContent":["import React from \"react\";\nimport \"./MemoryVisualizer.css\"; // Create this CSS file\n\nconst MemoryVisualizer = ({ callStack, microtasks, macrotasks, heap }) => {\n  return (\n    <div className=\"memory-visualizer\">\n      {/* Call Stack */}\n      <div className=\"section call-stack\">\n        <h4>ðŸ“ž Call Stack</h4>\n        <ul>\n          {callStack.length === 0 ? (\n            <li className=\"empty\">Empty</li>\n          ) : (\n            callStack.map((item, index) => <li key={index}>{item}</li>)\n          )}\n        </ul>\n      </div>\n\n      {/* Microtasks and Macrotasks (center column) */}\n      <div className=\"section queue\">\n        <div>\n          <h4>ðŸ“‹ Microtasks Queue</h4>\n          <ul>\n            {microtasks.length === 0 ? (\n              <li className=\"empty\">Empty</li>\n            ) : (\n              microtasks.map((item, index) => <li key={index}>{item}</li>)\n            )}\n          </ul>\n        </div>\n\n        <div>\n          <h4>ðŸ•“ Macrotasks Queue</h4>\n          <ul>\n            {macrotasks.length === 0 ? (\n              <li className=\"empty\">Empty</li>\n            ) : (\n              macrotasks.map((item, index) => <li key={index}>{item}</li>)\n            )}\n          </ul>\n        </div>\n      </div>\n\n      {/* Heap (Right Column) */}\n      <div className=\"section heap\">\n        <h4>ðŸ§  Heap</h4>\n        <ul>\n          {heap.length === 0 ? (\n            <li className=\"empty\">Empty</li>\n          ) : (\n            heap.map((item, index) => <li key={index}>{item}</li>)\n          )}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default MemoryVisualizer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}