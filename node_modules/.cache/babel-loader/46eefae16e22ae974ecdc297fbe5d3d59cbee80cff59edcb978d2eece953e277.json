{"ast":null,"code":"var _jsxFileName = \"/Users/sreedevir/Downloads/js-visualizer-starter/src/components/MemoryVisualizer.jsx\";\nimport React from \"react\";\nimport \"./MemoryVisualizer.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MemoryVisualizer({\n  callStack,\n  microtasks,\n  macrotasks,\n  heap\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"memory-layout\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"memory-block call-stack\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uD83D\\uDCDE Call Stack\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [...callStack].reverse().map((item, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: item.startsWith(\">>\") ? \"enter\" : \"exit\",\n            children: item.replace(\">> Enter: \", \"\").replace(\"<< Exit: \", \"\")\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"memory-block microtask\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uD83E\\uDDA0 Microtasks Queue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: microtasks.length > 0 ? microtasks.map((task, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: task\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"placeholder\",\n            children: \"No microtasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"memory-block macrotask\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uD83D\\uDD52 Macrotasks Queue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: macrotasks.length > 0 ? macrotasks.map((task, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: task\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"placeholder\",\n            children: \"No macrotasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heap-block\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uD83E\\uDDE0 Heap (Memory)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: heap.length > 0 ? heap.map((item, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: item\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"placeholder\",\n          children: \"No heap allocations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_c = MemoryVisualizer;\nvar _c;\n$RefreshReg$(_c, \"MemoryVisualizer\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","MemoryVisualizer","callStack","microtasks","macrotasks","heap","className","children","fileName","_jsxFileName","lineNumber","columnNumber","reverse","map","item","idx","startsWith","replace","length","task","_c","$RefreshReg$"],"sources":["/Users/sreedevir/Downloads/js-visualizer-starter/src/components/MemoryVisualizer.jsx"],"sourcesContent":["import React from \"react\";\nimport \"./MemoryVisualizer.css\";\n\nexport default function MemoryVisualizer({ callStack, microtasks, macrotasks, heap }) {\n  return (\n    <div className=\"memory-layout\">\n      <div className=\"top-section\">\n        {/* ðŸ“ž Call Stack */}\n        <div className=\"memory-block call-stack\">\n          <h4>ðŸ“ž Call Stack</h4>\n          <ul>\n            {[...callStack].reverse().map((item, idx) => (\n              <li key={idx} className={item.startsWith(\">>\") ? \"enter\" : \"exit\"}>\n                {item.replace(\">> Enter: \", \"\").replace(\"<< Exit: \", \"\")}\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        {/* ðŸ¦  Microtasks Queue */}\n        <div className=\"memory-block microtask\">\n          <h4>ðŸ¦  Microtasks Queue</h4>\n          <ul>\n            {microtasks.length > 0 ? microtasks.map((task, idx) => (\n              <li key={idx}>{task}</li>\n            )) : <p className=\"placeholder\">No microtasks</p>}\n          </ul>\n        </div>\n\n        {/* ðŸ•’ Macrotasks Queue */}\n        <div className=\"memory-block macrotask\">\n          <h4>ðŸ•’ Macrotasks Queue</h4>\n          <ul>\n            {macrotasks.length > 0 ? macrotasks.map((task, idx) => (\n              <li key={idx}>{task}</li>\n            )) : <p className=\"placeholder\">No macrotasks</p>}\n          </ul>\n        </div>\n      </div>\n\n      {/* ðŸ§  Heap (Memory) */}\n      <div className=\"heap-block\">\n        <h4>ðŸ§  Heap (Memory)</h4>\n        <ul>\n          {heap.length > 0 ? heap.map((item, idx) => (\n            <li key={idx}>{item}</li>\n          )) : <p className=\"placeholder\">No heap allocations</p>}\n        </ul>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}