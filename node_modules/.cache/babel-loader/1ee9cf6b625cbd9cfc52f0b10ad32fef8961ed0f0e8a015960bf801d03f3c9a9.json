{"ast":null,"code":"var _jsxFileName = \"/Users/sreedevir/Downloads/js-visualizer-starter/src/components/MemoryVisualizer.jsx\";\nimport React from \"react\";\nimport \"./MemoryVisualizer.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MemoryVisualizer({\n  memoryEvents = []\n}) {\n  const callStack = [];\n  const microtasks = [];\n  const macrotasks = [];\n  const heapObjects = [];\n\n  // Defensive: Filter and categorize\n  (memoryEvents || []).forEach(event => {\n    if (!event || typeof event.type !== \"string\") return;\n    switch (event.type) {\n      case \"callstack-push\":\n        callStack.push(event.value);\n        break;\n      case \"callstack-pop\":\n        callStack.pop(); // simulate function exit\n        break;\n      case \"microtask\":\n        microtasks.push(event.value);\n        break;\n      case \"macrotask\":\n        macrotasks.push(event.value);\n        break;\n      case \"heap\":\n        heapObjects.push(event.value);\n        break;\n      default:\n        console.warn(\"Unknown memory event:\", event);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"memory-visualizer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"memory-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDCDA Call Stack\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [...callStack].reverse().map((fn, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: fn\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"memory-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83E\\uDDF5 Microtasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: microtasks.map((task, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: task\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"memory-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u23F0 Macrotasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: macrotasks.map((task, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: task\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"memory-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83E\\uDDE0 Heap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: heapObjects.map((obj, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: JSON.stringify(obj, null, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_c = MemoryVisualizer;\nvar _c;\n$RefreshReg$(_c, \"MemoryVisualizer\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","MemoryVisualizer","memoryEvents","callStack","microtasks","macrotasks","heapObjects","forEach","event","type","push","value","pop","console","warn","className","children","fileName","_jsxFileName","lineNumber","columnNumber","reverse","map","fn","idx","task","obj","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/sreedevir/Downloads/js-visualizer-starter/src/components/MemoryVisualizer.jsx"],"sourcesContent":["import React from \"react\";\nimport \"./MemoryVisualizer.css\";\n\nexport default function MemoryVisualizer({ memoryEvents = [] }) {\n  const callStack = [];\n  const microtasks = [];\n  const macrotasks = [];\n  const heapObjects = [];\n\n  // Defensive: Filter and categorize\n  (memoryEvents || []).forEach(event => {\n    if (!event || typeof event.type !== \"string\") return;\n\n    switch (event.type) {\n      case \"callstack-push\":\n        callStack.push(event.value);\n        break;\n      case \"callstack-pop\":\n        callStack.pop(); // simulate function exit\n        break;\n      case \"microtask\":\n        microtasks.push(event.value);\n        break;\n      case \"macrotask\":\n        macrotasks.push(event.value);\n        break;\n      case \"heap\":\n        heapObjects.push(event.value);\n        break;\n      default:\n        console.warn(\"Unknown memory event:\", event);\n    }\n  });\n\n  return (\n    <div className=\"memory-visualizer\">\n      <div className=\"memory-section\">\n        <h3>üìö Call Stack</h3>\n        <ul>\n          {[...callStack].reverse().map((fn, idx) => (\n            <li key={idx}>{fn}</li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"memory-section\">\n        <h3>üßµ Microtasks</h3>\n        <ul>\n          {microtasks.map((task, idx) => (\n            <li key={idx}>{task}</li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"memory-section\">\n        <h3>‚è∞ Macrotasks</h3>\n        <ul>\n          {macrotasks.map((task, idx) => (\n            <li key={idx}>{task}</li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"memory-section\">\n        <h3>üß† Heap</h3>\n        <ul>\n          {heapObjects.map((obj, idx) => (\n            <li key={idx}>\n              <pre>{JSON.stringify(obj, null, 2)}</pre>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}